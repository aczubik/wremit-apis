openapi: "3.0.3"
info:
  version: 1.0.0
  title: Simple User API experiment
  description: User API
  license:
    name: WorldRemit
    url: https://worldremit/licence
servers:
  - url: https://worldremit.com/api/users    
paths:
  /api/v1/senders/{senderId}/recipients:
    post:
      summary: Create new recipient for a specified sender
      operationId: createRecipient
      tags:
        - recipients
      security:
        - bearerAuth: [Authorization]    
      parameters:
        - name: senderId
          in: path
          required: true
          schema:
            type: string
            format: uuid    
        - $ref: "#/components/headers/x-wr-device-id"
        - $ref: "#/components/headers/x-wr-platform"
        - $ref: "#/components/headers/x-wr-platform-version"
        - $ref: "#/components/headers/x-wr-request-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipientPost"
      responses:
        201: 
          description: Created
          content:
            application/json:
              schema:
                properties:
                  recipientId:
                    type: string
                    format: uuid     
        401:
          $ref: "#/components/responses/UnauthorizedError"
        409:
          $ref: "#/components/responses/ConflictError"
        500:
          $ref: "#/components/responses/InternalServerError"
  /api/v1/senders/{senderId}/recipients/{recipientId}:
    parameters:
      - name: senderId
        in: path
        required: true
        schema:
          type: string
          format: uuid    
      - name: recipientId
        in: path
        required: true
        schema:
          type: string
          format: uuid    
    get:
      summary: Get recipient for a specified sender
      operationId: getRecipientById
      tags:
        - recipients
      security:
        - bearerAuth: [Authorization]    
      parameters:
        - $ref: "#/components/headers/x-wr-platform"
        - $ref: "#/components/headers/x-wr-platform-version"
        - $ref: "#/components/headers/x-wr-request-id"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientGet"
    delete:
      summary: Remove recipient from a specified sender
      tags:
        - recipients
      description: Removes existing recipient.
      operationId: deleteRecipient
      security:
        - bearerAuth: [Authorization]      
      responses:
        200:
          description: Ok
        401:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          $ref: "#/components/responses/NotFoundError"          
        500:
          $ref: "#/components/responses/InternalServerError"                
  /api/v1/senders:
    post:
      summary: Create new user
      operationId: createUser
      tags:
        - senders
      security:
        - bearerAuth: [Authorization]    
      parameters:
        - $ref: "#/components/headers/x-wr-device-id"
        - $ref: "#/components/headers/x-wr-platform"
        - $ref: "#/components/headers/x-wr-platform-version"
        - $ref: "#/components/headers/x-wr-request-id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SenderPost"
      responses:
        201: 
          description: Created
          content:
            application/json:
              schema:
                properties:
                  userId:
                    type: string
                    format: uuid     
                  referenceNumber:
                    type: string                         
        401:
          $ref: "#/components/responses/UnauthorizedError"
        409:
          $ref: "#/components/responses/ConflictError"
        500:
          $ref: "#/components/responses/InternalServerError"
  /api/v1/senders/{senderId}:
    parameters:
      - $ref: "#/components/headers/x-wr-platform"
      - $ref: "#/components/headers/x-wr-platform-version"
      - $ref: "#/components/headers/x-wr-request-id"
      - name: senderId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get sender by id
      operationId: getUser
      tags:
        - senders
      security:
        - bearerAuth: [Authorization]
      parameters:
        - name: Content-Type
          in: header
          required: true
          description: Used for content negotiation and versioning
          schema:
            type: string
            enum: [application/vnd.users.getById-request,v1+json]
        - name: Accept
          in: header
          required: true
          description: Used for content negotiation and versioning
          schema:
            type: string
            enum: [applicationvnd.users.getById-response,v1+json]
      responses:
        200:
          description: OK 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SenderGet"
        401:
          $ref: "#/components/responses/UnauthorizedError"
        404:
          $ref: "#/components/responses/NotFoundError"
        500:
          $ref: "#/components/responses/InternalServerError"
    put:
      summary: Update sender
      operationId: updateUser
      tags:
        - senders
      security:
        - bearerAuth: [Authorization]    
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SenderPost"
      responses:
        200: 
          description: Ok
        401:
          $ref: "#/components/responses/UnauthorizedError"
        409:
          $ref: "#/components/responses/ConflictError"
        500:
          $ref: "#/components/responses/InternalServerError"
        
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: terefere
  headers:
    x-wr-platform:
      required: true
      schema:
        type: string
        enum: [android, ios, web, unknown]
    x-wr-platform-version:      
      required: true
      schema:
        type: string
    x-wr-request-id:
      required: true
      schema:
        type: string
        format: uuid     
    x-wr-device-id:
      required: true
      schema:
        type: string             
  responses:
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneralError"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneralError"            
    ConflictError:
      description: Conflict - user already exists (describe how user uniqueness is determined)
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneralError"
    InternalServerError:
      description: Internal Server Error - unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneralError"    
  schemas:
    GeneralError:
      description: General Error Schema
      properties:
        message:
          description: Error message. To be used in UI
          type: string
        timestamp:
          description: Error timestamp
          type: string
          format: timestamp
        traceId:
          description: OpenTracing traceId
          type: string
    RecipientPersonalDetails:
      properties:
        firstName:
          type: string
          description: User first name [BEN_FIRST_NAME]
        middleName:
          type: string
          description: User middle name [BEN_MIDDLE_NAME]
        lastName:
          type: string
          description: User last name [BEN_APELLIDOS]
        displayName:
          type: string
          description: | 
            Display name [BEN_NOMBRES]\
            **This should most likely not be directly edited but merged from first,middle,last names**
        gender:
          type: string
          description: Gender [BEN_SEXO]
        dateOfBirth:
          type: string
          format: date
          description: Date of birth [BEN_FECHA_NACIMIENTO]
        countryOfNationality:
          type: string
          format: Two letter country code
          description: Country of nationality [BEN_PAIS_NAC]
        occupation:
          type: string
          description: Occupation [BEN_CUPATION]
        image:
          type: string
          description: Image [BEN_FOTO_IMG]
        comment:
          type: string
          description: Comment [BEN_REMARK], I have no clue what this field is for
        politicallyExposedPerson:
          type: boolean
          description: Is a politically exposed person [BEN_PEP]
        relationshipWithSender:
          type: string
          description: Relationship with sender [BEN_RELATIONSHIP_WITH_SENDER], not sure if that is some enum or text
    RecipientAddressDetails:
      properties:
        addressLine1:
          type: string
          description: TODO [BEN_DIRECCION], probably there is a better name for this than addressLineX
        addressLine2:
          type: string
          description: TODO [BEN_DIRECCION_2], probably there is a better name for this than addressLineX
        addresLine3:
          type: string
          description: TODO [BEN_SUBURB], probably there is a better name for this than addressLineX
        country:
          type: string
          format: Full name of a country. Not country code.
          description: Recipient Country [BEN_PAIS] 
        countryId:
          type: string
          description: | 
            Recipient Country [BEN_PAIS_ID]\
            **HIDDEN this should be internally written based on country. It needs to be checked how this translation is done because country is not a country code but a full name**
        countryDialCode:
          type: string
          description: TODO [???] There is no separate dial code. It is derived from country! So this should be most likely only in GET.
        city:
          type: string
          description: City [BEN_CIUDAD], UI shows City/Town
        postalCode:
          type: string
          description: Zip Code [BEN_ZIP]
        region:
          type: string
          description: Region [BEN_REGION]
        stateId:
          type: string
          description: State [BEN_ESTADO_ID]
    RecipientContactDetails:
      properties:
        email:
          type: string
          description: Recipient email [BEN_EMAIL]
        mobilePhone:
          type: string
          description: |
            Recipient mobile phone number [BEN_CELULAR]\
            **This needs to be validated but I think number here is without a country prefix. This is I think fixed by a recipient country**
        phoneNumber:
          type: string
          description: Recipient landlane phone number [BEN_TELEFONO]
    RecipientBankAccountDetails:
      properties:
        accountNumber:
          type: string
          description: Account number [BEN_ACCOUNT]
        accountType:
          type: string
          description: Account type [BEN_TIPO_CUENTA]
        bankName:
          type: string
          description: Bank name [BEN_BANK_NAME]
        bankCode:
          type: string
          description: Bank code [BEN_BANK_CODE]
        BIC:
          type: string
          description: Business Identifier Code / SWIFT [BEN_ACCOUNT_BIC]
        IBAN:
          type: string
          description: International Bank Account Number [BEN_ACCOUNT_IBAN]
        branchName:
          type: string
          description: Bank branch name [BEN_BRANCH_NAME]
        branchCode:
          type: string
          description: Bank branch code [BEN_BRANCH_CODE]
        cardAccountNumber:
          type: string
          description: TODO [???]
    RecipientMobileAccountDetails:
      properties:
        mobileAccount:
          type: string
          description: TODO [BEN_MOBILE_ACCOUNT]
    RecipientDocumentDetails:
      properties:
        documentId:
          type: string
          description: | 
            TODO [BEN_IDENTIFICACION]\
            **I am not sure if that really means documentId and if that refers to the same document as documentType**
        documentType:
          type: string
          description: TODO [BEN_IDTIPO]        
    RecipientGet:
      properties:
        recipientId:
          type: string
          description: Recipient id [BEN_BENEFICIARIO_ID]
        isActive:
          type: string
          description: |
            Is active [BEN_ACTIVO], I think this field set to false means recipient is "deleted"\
            **I am not sure this should be directly exposed. Not sure**
        sendingReasonCode:
          $ref: "#/components/schemas/SendingResonSchema"
        personalDetails:
          $ref: "#/components/schemas/RecipientPersonalDetails"
        documentDetails:
          $ref: "#/components/schemas/RecipientDocumentDetails"
        addressDetails:
          $ref: "#/components/schemas/RecipientAddressDetails"
        contactDetails:
          $ref: "#/components/schemas/RecipientContactDetails"
        bankAccountDetails:
          $ref: "#/components/schemas/RecipientBankAccountDetails"
        mobileAccountDetails:
          $ref: "#/components/schemas/RecipientMobileAccountDetails"
    RecipientPost:
      properties:
        isActive:
          type: string
          description: |
            Is active [BEN_ACTIVO], I think this field set to false means recipient is "deleted"\
            **I am not sure this should be directly exposed. Not sure**
        sendingReasonCode:
          $ref: "#/components/schemas/SendingResonSchema"
        personalDetails:
          $ref: "#/components/schemas/RecipientPersonalDetails"
        documentDetails:
          $ref: "#/components/schemas/RecipientDocumentDetails"
        addressDetails:
          $ref: "#/components/schemas/RecipientAddressDetails"
        contactDetails:
          $ref: "#/components/schemas/RecipientContactDetails"
        bankAccountDetails:
          $ref: "#/components/schemas/RecipientBankAccountDetails"
        mobileAccountDetails:
          $ref: "#/components/schemas/RecipientMobileAccountDetails"          
    SenderPersonalDetails:
      properties:
        firstName:
          type: string
          description: User first name [firstMiddleName, firstName] ??
        middleName:
          type: string
          description: User middle name [middleName]
        lastName:
          type: string
          description: User last name [lastName]
        email:
          type: string
          description: User email. Treated as system login id [REM_EMAIL]
        dateOfBirth:
          type: string
          format: date
          description: User date of birth [REM_FECHA_NACIMIENTO]
        gender:
          type: string
          enum: [Male, Female]
          description: User gender [REM_SEXO]
        nationality:
          type: string
          description: User nationality [REM_PAIS_NAC]
        occupation:
          type: string
          description: User occupation
        countryOfResidence:
          type: string
          description: TODO [REM_PAIS_RES]
    SenderAddressDetails:
      properties:
        country:
          type: string 
          description: TODO [REM_PAIS]
        region:
          type: string
          description: TODO [REM_REGION, REM_ESTADO]
        city:
          type: string
          description: TODO [REM_CIUDAD]
        suburb:
          type: string 
          description: What would that mean? Internally it is called Town [REM_SUBURB]
        postalCode:
          type: string
          description: Postal Code [REM_ZIP]
        street:
          type: string
          description: Street [REM_DIRECCION2 ?]
        builing:
          type: string
          description: House number [REM_BUILDING]
        flatUnit:
          type: string
          description: TOOD I don't remember logic of building vs flatUnit. Verify.
    SenderContactDetails:
      properties:
        email:
          type: string
          description: User email [REM_EMAIL]
        phoneNumber:
          type: string
          description: Land line number [REM_TELEFONO]
        mobileNumber:
          type: string
          description: REMEMBER about the fact that in legacy this is combined with dialCode via PAISES. What do we want to do here? Since in this API we're not changing semantics of old system we should keep it the same. [REM_CELULAR]
    SenderDocumentDetails:
      description: There are most likely overlapping properties for the same value for documents. It needs to be verified which ones are used. Without tests I cannot be sure if below I haven't mixed properties from different sets of document fields.
      properties:
        type: 
          type: string
          description: Document type [REM_IDTIPO] (set of values or just string?)
        number:
          type: string
          description: Document number [REM_IDENTIFICATION, IdIssueNumber]
        issueDate:
          type: string
          format: date
          description: Document issue data [IdIssueDate]
        expiryDate:
          type: string
          format: date
          description: Document expiry data [REM_VENCE_DOCUMENTO]
        issuingCountry:
          type: string
          description: Documment issuing country [IdIssuingCountry]
        driversLicenceState:
          type: string
          description: State in which driving license was issued. For DrivingLicence document type. [REM_DL_STATE]
        comments:
          type: string
          description: TODO [REM_COMENTARIO]
        image:
          type: object
          description: Image [REM_FOTO_IMG]
    SenderGet:
      properties:
        userId:
          type: string
          format: uuid
        referenceNumber:
          type: string
          description: Human readable user identifier
        deviceId:
          type: string
          description: User device id
        sourcePlatform:
          type: string
          description: Platform on a device user was created from
          enum: [android, ios, web, unknown]
        preferredLanguage:
          type: string
          description: User preferred UI and communication language
        referralCode:
          type: string
          description: TODO
        personalDetails:
          $ref: "#/components/schemas/SenderPersonalDetails"
        addressDetails:
          $ref: "#/components/schemas/SenderAddressDetails"
        contactDetails:
          $ref: "#/components/schemas/SenderContactDetails"
        documentDetails:
          $ref: "#/components/schemas/SenderDocumentDetails"
    SenderPost:
      properties:
        preferredLanguage:
          type: string
          description: User preferred UI and communication language
        referralCode:
          type: string
          description: TODO
        personalDetails:
          $ref: "#/components/schemas/SenderPersonalDetails"
        addressDetails:
          $ref: "#/components/schemas/SenderAddressDetails"
        contactDetails:
          $ref: "#/components/schemas/SenderContactDetails"
        documentDetails:
          $ref: "#/components/schemas/SenderDocumentDetails"
    SendingResonSchema:
      type: string
      description: >
        Sending reason code [BEN_SENDING_REASON_CODE]
          * `FFS` : Family or friend support
          * `PGS` : Purchase of services
          * `PP` : Property payment
          * `SFS` : Sending funds to self
      enum: [FFS, PGS, PP, SFS]      
